from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
import os

import keyboard
import createFront
import const


bot = Bot(token='5541380975:AAGI9U-DbTq7MC6mE5XPvRbKEaT76XKewNU')
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await bot.send_message(message.from_user.id, const.CONST_GREETINGS, reply_markup=keyboard.create_keyboard_front())


@dp.message_handler(commands=['/help'])
async def process_help_command(message: types.Message):
    await bot.send_message(message.from_user.id, const.CONST_HELP)


@dp.message_handler(lambda message: message.text == "–í –Ω–∞—á–∞–ª–æ üòé")
async def process_start_command(message: types.Message):
    await bot.send_message(message.from_user.id, const.CONST_GREETINGS, reply_markup=keyboard.create_keyboard_front())


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –û –±–æ—Ç–µ ü§ñ
@dp.message_handler(lambda message: message.text == "–û –±–æ—Ç–µ ü§ñ")
async def without_puree(message: types.Message):
    msg = "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤—ã–±—Ä–∞—Ç—å —à—Ä–∏—Ñ—Ç –∏ —Ü–≤–µ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å–∞.\n" \
          "‚úÖ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start.\n" \
          "‚úÖ –í—ã–±–µ—Ä–∏—Ç–µ —à—Ä–∏—Ñ—Ç.\n" \
          "‚úÖ –í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç.\n" \
          "‚úÖ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É —Ñ—Ä–∞–∑—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–æ–±—Ä–∞–∑–∏—Ç—å.\n" \
          "‚úÖ –ù–∞–∂–º–∏—Ç–µ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç üìù.\n"
    await bot.send_message(message.from_user.id, msg)


# –æ–±—Ä–∞—Ç–∫–∞ —Å–≤—è–∑–∏ —Å –∞–≤—Ç–æ—Ä–æ–º
@dp.message_handler(lambda message: message.text == "–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–≤—Ç–æ—Ä–æ–º üë©üèΩ‚Äçüíª")
async def without_puree(message: types.Message):
    await bot.send_message(message.from_user.id, const.CONST_ANSWER)


# –≤—ã–≤–æ–¥ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤
@dp.message_handler(lambda message: message.text == "–í—ã–±—Ä–∞—Ç—å —Ü–≤–µ—Ç üé®")
async def without_puree(message: types.Message):
    # –∑–¥–µ—Å—å inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞
    photo = open('color.jpg', 'rb')
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç—ã, —Ç–æ–≥–¥–∞ —Ñ–æ–Ω –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º
    await bot.send_photo(message.from_user.id, photo, const.CONST_COLOR, reply_markup=keyboard.create_inline_board_color())
    # await bot.send_message(message.from_user.id, "–≤—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç", reply_markup=keyboard.create_inline_board_color())


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞
@dp.callback_query_handler(lambda c: c.data and c.data.startswith('btn_color'))
async def process_callback_kb1btn1(callback_query: types.CallbackQuery):
    code = callback_query.data[-1]
    code2 = callback_query.data[-2]
    if code.isdigit():
        code = int(code)
        if code2.isdigit():
            code2 = int(code2)
            code = code2*10+code
    if code == 1:
        const.CONST_COLOR_NAME = "black"
        const.CUR_NUMBER_COLOR = "1"
    elif code == 2:
        const.CONST_COLOR_NAME = "white"
        const.CUR_NUMBER_COLOR = "2"
    elif code == 3:
        const.CONST_COLOR_NAME = "LightPink"
        const.CUR_NUMBER_COLOR = "3"
    elif code == 4:
        const.CONST_COLOR_NAME = "LightSkyBlue"
        const.CUR_NUMBER_COLOR = "4"
    elif code == 5:
        const.CONST_COLOR_NAME = "Khaki"
        const.CUR_NUMBER_COLOR = "5"
    elif code == 6:
        const.CONST_COLOR_NAME = "MediumAquamarine"
        const.CUR_NUMBER_COLOR = "6"
    elif code == 7:
        const.CONST_COLOR_NAME = "SlateBlue"
        const.CUR_NUMBER_COLOR = "7"
    elif code == 8:
        const.CONST_COLOR_NAME = "AntiqueWhite"
        const.CUR_NUMBER_COLOR = "8"
    elif code == 9:
        const.CONST_COLOR_NAME = "DodgerBlue"
        const.CUR_NUMBER_COLOR = "9"
    elif code == 10:
        const.CONST_COLOR_NAME = "Maroon"
        const.CUR_NUMBER_COLOR = "10"
    msg = "–í—ã–±—Ä–∞–Ω —Ü–≤–µ—Ç ‚Ññ %s" % const.CUR_NUMBER_COLOR
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, msg)
    msg_all = "–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É, –∫ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:"
    await bot.send_message(callback_query.from_user.id, msg_all, reply_markup=keyboard.create_keyboard_color_generate())


# –≤—ã–≤–æ–¥ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à—Ä–∏—Ñ—Ç–æ–≤
@dp.message_handler(lambda message: message.text == "–í—ã–±—Ä–∞—Ç—å —à—Ä–∏—Ñ—Ç ‚úíÔ∏è")
async def without_puree(message: types.Message):
    photo = open('front.jpg', 'rb')
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç—ã, —Ç–æ–≥–¥–∞ —Ñ–æ–Ω –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º
    await bot.send_photo(message.from_user.id, photo, const.CONST_FRONT, reply_markup=keyboard.create_inline_board_front())
    # await bot.send_message(message.from_user.id, "–≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö",)


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞
@dp.callback_query_handler(lambda c: c.data and c.data.startswith('btn_front'))
async def process_callback_kb1btn1(callback_query: types.CallbackQuery):
    code = callback_query.data[-1]
    code2 = callback_query.data[-2]
    if code.isdigit():
        code = int(code)
        if code2.isdigit():
            code2 = int(code2)
            code = code2*10+code
    if code == 1:
        const.CONST_FRONT_NAME = "PoiretOne-Regular.ttf"
        const.CUR_NUMBER_FRONT = "1"
    elif code == 2:
        const.CONST_FRONT_NAME = "ComforterBrush-Regular.ttf"
        const.CUR_NUMBER_FRONT = "2"
    elif code == 3:
        const.CONST_FRONT_NAME = "AmaticSC-Regular.ttf"
        const.CUR_NUMBER_FRONT = "3"
    elif code == 4:
        const.CONST_FRONT_NAME = "Pacifico-Regular.ttf"
        const.CUR_NUMBER_FRONT = "4"
    elif code == 5:
        const.CONST_FRONT_NAME = "Caveat-VariableFont_wght.ttf"
        const.CUR_NUMBER_FRONT = "5"
    elif code == 6:
        const.CONST_FRONT_NAME = "RubikGlitch-Regular.ttf"
        const.CUR_NUMBER_FRONT = "6"
    elif code == 7:
        const.CONST_FRONT_NAME = "MarckScript-Regular.ttf"
        const.CUR_NUMBER_FRONT = "7"
    elif code == 8:
        const.CONST_FRONT_NAME = "BadScript-Regular.ttf"
        const.CUR_NUMBER_FRONT = "8"
    elif code == 9:
        const.CONST_FRONT_NAME = "KleeOne-Regularr.ttf"
        const.CUR_NUMBER_FRONT = "9"
    elif code == 10:
        const.CONST_FRONT_NAME = "HachiMaruPop-Regular.ttf"
        const.CUR_NUMBER_FRONT = "10"
    elif code == 11:
        const.CONST_FRONT_NAME = "DotGothic16-Regular.ttf"
        const.CUR_NUMBER_FRONT = "11"
    # elif code == 12:
    #     const.CONST_FRONT_NAME = "Comforter-Regular.ttf"
    elif code == 12:
        const.CONST_FRONT_NAME = "Lobster-Regular.ttf"
        const.CUR_NUMBER_FRONT = "12"
    msg = "–í—ã–±—Ä–∞–Ω —à—Ä–∏—Ñ—Ç ‚Ññ %s" % const.CUR_NUMBER_FRONT
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, msg, reply_markup=keyboard.create_keyboard_color())


# –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞–¥–ø–∏—Å–∏
@dp.message_handler(lambda message: message.text == "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç üìù")
async def without_puree(message: types.Message):
    if len(const.INPUT_TEXT) == 0:
        await bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ –µ—â–µ —Ä–∞–∑ –∫–Ω–æ–ø–∫—É")
        return
    createFront.transparent()
    photo = open(const.CUR_NAME, 'rb')
    await bot.send_document(message.chat.id, photo,  reply_markup=keyboard.create_keyboard_front())
    os.remove(const.CUR_NAME, dir_fd=None)
    const.INPUT_TEXT = ""


@dp.message_handler()
async def echo_message(message: types.Message):
    const.INPUT_TEXT = message.text
    msg = "–¢–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç üìù"
    await bot.send_message(message.from_user.id, msg, reply_markup=keyboard.create_keyboard_color_generate())


if __name__ == '__main__':
    executor.start_polling(dp)